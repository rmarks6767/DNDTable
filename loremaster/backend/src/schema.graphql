schema {
    query: Query
    mutation: Mutation
}

type Query {
    map(
        id: Guid!
    ): mapGraph
}

type Mutation {
    createMap(
        map: mapInput!
    ): statusCodeGraph
    updatePosition(
        id: Guid!
        x: Int!
        y: Int!
    ): statusCodeGraph
}

type mapGraph {
    id: Guid!
    tiles: [tileGraph]!
    imageLink: String!
}

input mapInput {
    id: Guid!
    name: String!
    tiles: [tileInput]!
    imageLink: String!
}

type tileGraph {
    id: Guid!
    height: Int!
    width: Int!
    x: Int!
    y: Int!
    type: terrainEnum!
}

input tileInput {
    id: Guid!
    height: Int!
    width: Int!
    x: Int!
    y: Int!
    type: terrainEnum!
}

type statusCodeGraph {
    code: Int!
    message: String!
}

enum terrainEnum {
    IMPASSABLE
    PASSABLE
    ROUGH
    SLIPPERY
}

scalar Int
scalar Float
scalar Boolean
scalar String
scalar Guid
scalar Date